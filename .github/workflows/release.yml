name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      manual:
        description: "Trigger Release (true/false)"
        required: false
        default: "false"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release Dry Run (get next version)
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # dry-run in eine Datei umleiten
          npx semantic-release --dry-run > semantic-output.txt

      - name: Extract version
        id: extract_version
        run: |
          if [ ! -f semantic-output.txt ]; then
            echo "semantic-output.txt not found."
            echo "continue=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          VERSION=$(grep -oP 'The next release version is \K[0-9]+\.[0-9]+\.[0-9]+' semantic-output.txt || true)

          if [ -z "$VERSION" ]; then
            echo "No version found in semantic-output.txt."
            echo "continue=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Next version: $VERSION"
          echo "continue=true" >> $GITHUB_OUTPUT

      - name: Build mod and update version
        if: steps.extract_version.outputs.continue == 'true'
        env:
          VERSION: ${{ env.VERSION }}
        run: npm run build

      - name: Publish Release
        if: steps.extract_version.outputs.continue == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
